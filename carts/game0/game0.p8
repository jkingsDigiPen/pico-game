pico-8 cartridge // http://www.pico-8.com
version 8
__lua__
package={loaded={},_c={}}
package._c["gameObject"]=function()
-- Filename: gameObject.lua
-- Purpose: GameObject functions
-- Author: Jeremy Kings

-- Dependencies
require("vec2") -- vec2
local collision = require("collision") -- collisionMapRect
local globals = require("globals") -- pixelsPerUnit

-- Class definition
gameObject = 
{
	-- Transform
	position = vec2:new(0,0),
	extents = vec2:new(0.3,0.4),
	
	-- sprite
	sprite = 0,
	frameCurr = 0,
	frameCount = 2,
	
	-- physics
	velocity = vec2:new(0,0),
	inertia = 0.6,
	gravity = 0.1,
	
	-- collision
	grounded = false,
	t = 0,
	bounce = 1,
}

-- Constructor
function gameObject:new(go)
	go = go or {}
	setmetatable(go, self)
	self.__index = self
	return go
end

-- Move and animate an object
function gameObject:Update(objects)
	-- PHYSICS
	-- only move object along x
	-- if the resulting position
	-- will not overlap with an object
	if not collision.checkAll(self, vec2:new(self.velocity.x, 0), objects) then
		self.position.x += self.velocity.x
	else   
		-- otherwise bounce
		self.velocity.x *= -self.bounce
		--sfx(2)
	end

	-- ditto for y
	if not collision.checkAll(self, vec2:new(0, self.velocity.y), objects) then
		self.position.y += self.velocity.y
	else
		self.velocity.y *= -self.bounce
	end

	-- apply inertia
	-- set dx,dy to zero if you
	-- don't want inertia
	self.velocity = self.velocity:times(self.inertia)
	
	-- apply gravity
	self.grounded = collision.checkMapPoint(vec2:new(self.position.x, self.position.y + 0.5))
	if not grounded then
		self.velocity.y += self.gravity
	end

	-- ANIMATION
	-- advance one frame every
	-- time actor moves 1/4 of
	-- a tile
	self.frameCurr += abs(self.velocity.x) * 4
	self.frameCurr += abs(self.velocity.y) * 4
	self.frameCurr %= self.frameCount
	
	-- What is this for???
	self.t += 1
	
end

-- draw object's sprite
function gameObject:Draw()
	local spritePosition = self.position:minus(vec2:new(0.5,0.5)):times(globals.pixelsPerUnit)
	spr(self.sprite + self.frameCurr, spritePosition.x, spritePosition.y)
end
end
package._c["vec2"]=function()
-- Filename: vec2.lua
-- Purpose: 2D vector functions
-- Author: Jeremy Kings

-- Dependencies
-- require("")

-- Class definition
vec2 =
{
	x = 0,
	y = 0,
}

-- Constructor
function vec2:new(x, y)
	v = {}
	setmetatable(v, self)
	self.__index = self
	v.x = x
	v.y = y
	return v
end

-- Operators
function vec2:plus(v1)
	vr = vec2:new(0,0)
	vr.x = self.x + v1.x
	vr.y = self.y + v1.y
	return vr
end

function vec2:minus(v1)
	vr = vec2:new(0,0)
	vr.x = self.x - v1.x
	vr.y = self.y - v1.y
	return vr
end

function vec2:times(s)
	vr = vec2:new(0,0)
	vr.x = self.x * s
	vr.y = self.y * s
	return vr
end

function vec2:dot(v1)
	return self.x * v1.x + self.y * v1.y
end
	
function vec2:lenSq()
	return self.x * self.x + self.y * self.y
end

function vec2:len()
	return sqrt(self:lenSq())
end

function vec2:distSq(v1)
	return self:lenSq(self:sub(v1))
end

function vec2:dist(v1)
	return sqrt(self:distSq(v1))
end
end
package._c["collision"]=function()
-- Filename: collision.lua
-- Purpose: Collision Detection, Resolution
-- Author: Jeremy Kings

-- Dependencies
require("vec2") -- vec2

local collision = {}

-- for any given point on the map, true if there is a wall
function collision.checkMapPoint(position)

	-- grab the cell value
	val = mget(position.x, position.y)

	-- check if flag 1 is set (the
	-- orange toggle button in the 
	-- sprite editor)
	return fget(val, 1)
 
end

-- check if a rectangle overlaps with any walls
--(only works for objects less than one tile big)
function collision.checkMapRect(position, extents)
	return
		collision.checkMapPoint(position:minus(extents)) or
		collision.checkMapPoint(vec2:new(position.x + extents.x, position.y - extents.y)) or
		collision.checkMapPoint(vec2:new(position.x - extents.x, position.y + extents.y)) or
		collision.checkMapPoint(position:plus(extents))
end

-- true if go will hit another
-- object after moving a specific amount
function collision.checkObject(go1, moveAmount, go2)

	local diffStart = go1.position:minus(go2.position)
	local diffEnd = go1.position:plus(moveAmount):minus(go2.position)
	local extSum = go1.extents:plus(go2.extents)
	
	if ((abs(diffEnd.x) < extSum.x) and (abs(diffEnd.y) < extSum.y)) then
		local velSum = go1.velocity:plus(go2.velocity)

		-- moving together?
		-- this allows actors to
		-- overlap initially 
		-- without sticking together    
		if (moveAmount.x != 0 and abs(diffEnd.x) < abs(diffStart.x)) then
			v = velSum.x
			go1.velocity.x = v / 2
			go2.velocity.x = v / 2
			return true 
		end

		if (moveAmount.y != 0 and abs(diffEnd.y) < abs(diffStart.y)) then
			v = velSum.y
			go1.velocity.y = v / 2
			go2.velocity.y = v / 2
			return true 
		end

		return true
	end
	
	return false
end

-- check collision against all other objects
function collision.checkObjectList(go1, moveAmount, objects)
	for go2 in all(objects) do
		if (go2 != go1) then
			if collision.checkObject(go1, moveAmount, go2) then
				return true
			end
		end
	end
	
	return false
end

-- check map and object collisions
function collision.checkAll(go, moveAmount, objects)
	if collision.checkMapRect(go.position:plus(moveAmount), go.extents) then
		return true 
	end
	
	return collision.checkObjectList(go, moveAmount, objects)
end

return collision
end
package._c["globals"]=function()
-- Filename: globals.lua
-- Purpose: Define globals
-- Author: Jeremy Kings

-- Dependencies
--require("")

-- Consts
local globals = {}

globals.pixelsPerUnit = 8 -- Pixels per unit
globals.viewportWidth = 128 -- Viewport width in pixels
globals.mapWidth = 23 -- Map width in units
globals.mapHeight = 13 -- Map height in units

return globals
end
package._c["manager"]=function()
-- Filename: manager.lua
-- Purpose: Manage objects
-- Author: Jeremy Kings

-- Dependencies
require("gameObject") -- gameObjectMove, gameObjectDraw

local manager = {}

-- Array of all objects in world
manager.objects = {}

function manager.add(go)
	add(manager.objects, go)
end

function manager.update()
	for go in all(manager.objects) do
		gameObject.Update(go, manager.objects)
	end
end

function manager.draw()
	foreach(manager.objects, gameObject.Draw)
end

return manager
end
package._c["input"]=function()
-- Filename: input.lua
-- Purpose: Define inputs
-- Author: Jeremy Kings

-- Dependencies
--require("")

-- Consts
local keys = {}

keys.left = 0
keys.right = 1
keys.up = 2
keys.down = 3

return keys
end
function require(p)
local l=package.loaded
if (l[p]==nil) l[p]=package._c[p]()
if (l[p]==nil) l[p]=true
return l[p]
end
-- Filename: game0
-- Purpose: Game logic
-- Author: Jeremy Kings

-- Dependencies
require("gameObject") -- create
local manager = require("manager") -- update, draw
local keys = require("input") -- keys
local globals = require("globals") -- pixelsPerUnit, viewportWidth, mapWidth, mapHeight

-- Player controller
function playerUpdate()

	-- How fast to pick up speed
	local accel = 0.1
	-- Less control in air
	if not player.grounded then 
		accel *= 0.5 
	end
	
	if btn(keys.left) then 
		player.velocity.x -= accel 
	end
	if btn(keys.right) then 
		player.velocity.x += accel 
	end
	
	-- jump
	local jump = -1.5
	if btnp(keys.up) and player.grounded then 
		player.velocity.y += jump
	end

	-- play a sound if moving
	-- (every 4 ticks)
	if abs(player.velocity.x) + abs(player.velocity.y) 
			> 0.1 and (player.t % 4) == 0 then
		sfx(1)
	end
	
end

function cameraUpdate()
	-- map and actors
	cam_x = mid(0, player.position.x * globals.pixelsPerUnit - (0.5) * globals.viewportWidth, 
		(globals.mapWidth - 3) * 3)

	--cam_y = mid(0,player.y*6-40,128)
	cam_y = 0
	camera (cam_x,cam_y)
end

-- Initialize
function _init()
	-- make player top left
	player = gameObject:new
	{
		position = vec2:new(2, 2), 
		sprite = 17,
	}
	manager.add(player)

	-- make a bouncy ball
	--[[local ball = gameObject:new
	{
		position = vec2:new(8.5, 7.5), 
		sprite = 33,
		velocity = vec2:new(0.05, 0.1),
		inertia = 0.5,
	}
	manager.add(ball)

	-- make non-bouncy ball
	local ball = gameObject:new
	{
		position = vec2:new(7, 5), 
		sprite = 49,
		velocity = vec2:new(-0.1, 0.15),
		inertia = 1,
		bounce = 0.8,
	}
	manager.add(ball)

	-- tiny guy
	local a = gameObject:new
	{
		position = vec2:new(8, 5), 
		sprite = 5,
		frameCount = 4,
		velocity = vec2:new(1/8,0),
		inertia = 0.8,
	}
	manager.add(a)]]
	
end

function guiDraw()
	-- fix positions of gui elements
	camera(0, 0)
	print("x "..player.position.x, 0, 120, 7)
	print("y "..player.position.y, 64, 120, 7)
end

-- Update
function _update()
 playerUpdate()
 manager.update()
 cameraUpdate()
end

-- Draw
function _draw()
	cls()
	map(0,0,0,0, globals.mapWidth, globals.mapHeight)
	manager.draw()
	guiDraw()
end
__gfx__
000000003bbbbbb7dccccc770cccccc00000000000ccc70000ccc70000ccc70000ccc70000000000000000000000000000000000000000000000000000000000
000000003000000bd0000077d000007c101110100cccccc00cccccc00cccccc00cccccc000000000000000000000000000000000000000000000000000000000
000000003000070bd000000cd000770c000000000cffffc00cffffc00cffffc00cffffc000000000000000000000000000000000000000000000000000000000
000000003000000bd000000cd000770c000000000c5ff5c00c5ff5c00c5ff5c00c5ff5c000000000000000000000000000000000000000000000000000000000
000000003000000bd000000cd000000c000000000cffffc00cffffcc0cffffc0ccffffc000000000000000000000000000000000000000000000000000000000
000000003000000bd000000cd000000c00101101ccccccccccccccc0cccccccc0ccccccc00000000000000000000000000000000000000000000000000000000
000000003000000bd000000cd000000c000000000cccccc00cccccc00cccccc00cccccc000000000000000000000000000000000000000000000000000000000
00000000111111115111111101111110000000000c0000c0c00000c00c0000c00c00000c00000000000000000000000000000000000000000000000000000000
aaaaaaaa00ffff0000ffff0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
a000000a00dffd0000dffd0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
a000000a00ffff0000ffff0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
a000000a0882288ff882288000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
a000000af08228000082280f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
a000000a008558000085580000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
a000000a005005000500005000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
aaaaaaaa066006606600006600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000aaaa000077770000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000a0000a00700007000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000a000770a7000770700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000a000770a7000770700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000a000000a7000000700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000a000000a7000000700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000a0000a00700007000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000aaaa000077770000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000008888000088880000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000088888800888888000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000288888882888888800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000002e8e8e8e28e8e8e800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000002e8e8e8e28e8e8e800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000228888882288888800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000022888800228888000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000002222000022220000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000

__gff__
0002020200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0202020202020202020302020202020202020203020202000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0200000000000000000400000302020000000000000002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0200000000000000000000000202020000000000000002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0302020200000004000000000202030100000000000002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0200040000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0200010002030000000000000000000002020000000002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0200000002020400000000000000000002020000000002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0200000000000000020300000000000000000000000002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0304000000000000020201000000000000000202020302000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0200000000000000000400000000000000000202020202000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0200000000000000000000000202020000000000000002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0200000400000000000000000202030000000000000002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0302020202030202020202020203020202020302020202000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000100000c55012540075100050000500005000050000500005000050000500005000050000500005000050000500005000050000500005000050000500005000050000500005000050000500005000050000500
000100003073020750217201171000700007000070000700007000070000700007000070000700007000070000700007000070000700007000070000700007000070000700007000070000700007000070000700
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__music__
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344

